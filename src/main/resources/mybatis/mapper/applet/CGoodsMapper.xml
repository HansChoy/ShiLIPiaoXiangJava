<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hans.shilipiaoxiang.applet.mapper.CGoodsMapper" >
  <resultMap id="BaseResultMap" type="com.hans.shilipiaoxiang.applet.pojo.CGoods" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="ifSale" property="ifsale" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="origin_price" property="originPrice" jdbcType="DOUBLE" />
    <result column="amount" property="amount" jdbcType="INTEGER" />
    <result column="thumb" property="thumb" jdbcType="VARCHAR" />
    <result column="num" property="num" jdbcType="INTEGER" />
    <result column="type_id" property="typeId" jdbcType="INTEGER" />
    <result column="recommend" property="recommend" jdbcType="INTEGER" />
    <result column="material" property="material" jdbcType="VARCHAR" />
    <result column="tag_num" property="tagNum" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, title, ifSale, price, origin_price, amount, thumb, num, type_id, recommend, material,
    tag_num, state
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hans.shilipiaoxiang.applet.pojo.CGoodsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from c_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from c_goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from c_goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hans.shilipiaoxiang.applet.pojo.CGoodsExample" >
    delete from c_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hans.shilipiaoxiang.applet.pojo.CGoods" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into c_goods (title, ifSale, price,
    origin_price, amount, thumb,
    num, type_id, recommend,
    material, tag_num, state
    )
    values (#{title,jdbcType=VARCHAR}, #{ifsale,jdbcType=INTEGER}, #{price,jdbcType=DOUBLE},
    #{originPrice,jdbcType=DOUBLE}, #{amount,jdbcType=INTEGER}, #{thumb,jdbcType=VARCHAR},
    #{num,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}, #{recommend,jdbcType=INTEGER},
    #{material,jdbcType=VARCHAR}, #{tagNum,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.hans.shilipiaoxiang.applet.pojo.CGoods" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into c_goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="title != null" >
        title,
      </if>
      <if test="ifsale != null" >
        ifSale,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="originPrice != null" >
        origin_price,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="thumb != null" >
        thumb,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="recommend != null" >
        recommend,
      </if>
      <if test="material != null" >
        material,
      </if>
      <if test="tagNum != null" >
        tag_num,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="ifsale != null" >
        #{ifsale,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="originPrice != null" >
        #{originPrice,jdbcType=DOUBLE},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="thumb != null" >
        #{thumb,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="recommend != null" >
        #{recommend,jdbcType=INTEGER},
      </if>
      <if test="material != null" >
        #{material,jdbcType=VARCHAR},
      </if>
      <if test="tagNum != null" >
        #{tagNum,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hans.shilipiaoxiang.applet.pojo.CGoodsExample" resultType="java.lang.Integer" >
    select count(*) from c_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update c_goods
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.ifsale != null" >
        ifSale = #{record.ifsale,jdbcType=INTEGER},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.originPrice != null" >
        origin_price = #{record.originPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=INTEGER},
      </if>
      <if test="record.thumb != null" >
        thumb = #{record.thumb,jdbcType=VARCHAR},
      </if>
      <if test="record.num != null" >
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.typeId != null" >
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.recommend != null" >
        recommend = #{record.recommend,jdbcType=INTEGER},
      </if>
      <if test="record.material != null" >
        material = #{record.material,jdbcType=VARCHAR},
      </if>
      <if test="record.tagNum != null" >
        tag_num = #{record.tagNum,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update c_goods
    set id = #{record.id,jdbcType=INTEGER},
    title = #{record.title,jdbcType=VARCHAR},
    ifSale = #{record.ifsale,jdbcType=INTEGER},
    price = #{record.price,jdbcType=DOUBLE},
    origin_price = #{record.originPrice,jdbcType=DOUBLE},
    amount = #{record.amount,jdbcType=INTEGER},
    thumb = #{record.thumb,jdbcType=VARCHAR},
    num = #{record.num,jdbcType=INTEGER},
    type_id = #{record.typeId,jdbcType=INTEGER},
    recommend = #{record.recommend,jdbcType=INTEGER},
    material = #{record.material,jdbcType=VARCHAR},
    tag_num = #{record.tagNum,jdbcType=INTEGER},
    state = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hans.shilipiaoxiang.applet.pojo.CGoods" >
    update c_goods
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="ifsale != null" >
        ifSale = #{ifsale,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="originPrice != null" >
        origin_price = #{originPrice,jdbcType=DOUBLE},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="thumb != null" >
        thumb = #{thumb,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="recommend != null" >
        recommend = #{recommend,jdbcType=INTEGER},
      </if>
      <if test="material != null" >
        material = #{material,jdbcType=VARCHAR},
      </if>
      <if test="tagNum != null" >
        tag_num = #{tagNum,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hans.shilipiaoxiang.applet.pojo.CGoods" >
    update c_goods
    set title = #{title,jdbcType=VARCHAR},
      ifSale = #{ifsale,jdbcType=INTEGER},
      price = #{price,jdbcType=DOUBLE},
      origin_price = #{originPrice,jdbcType=DOUBLE},
      amount = #{amount,jdbcType=INTEGER},
      thumb = #{thumb,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=INTEGER},
      recommend = #{recommend,jdbcType=INTEGER},
      material = #{material,jdbcType=VARCHAR},
      tag_num = #{tagNum,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="commitCartGoods"  resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select b.num,a.id,a.title,a.ifSale,a.price,a.origin_price,a.amount,a.thumb,a.type_id,a.tag_num from c_goods a,c_cart_goods b where a.id = b.good_id and cart_id = #{cartId,jdbcType=INTEGER} and a.state=0 order by a.id
  </select>
  <select id="showRecommendGoods"  resultMap="BaseResultMap">
    select * from c_goods  where recommend=1 order by id
  </select>
  <select id="showOrderPreview"  resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select a.id,a.title from c_goods a,c_order_goods b where a.id = b.good_id and b.order_id = #{cartId,jdbcType=INTEGER} order by a.id
  </select>
  <resultMap id="showGood" type="com.hans.shilipiaoxiang.applet.pojo.CGoods" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="ifSale" property="ifsale" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="origin_price" property="originPrice" jdbcType="DOUBLE" />
    <result column="amount" property="amount" jdbcType="INTEGER" />
    <result column="thumb" property="thumb" jdbcType="VARCHAR" />
    <result column="num" property="num" jdbcType="INTEGER" />
    <result column="type_id" property="typeId" jdbcType="INTEGER" />
    <result column="recommend" property="recommend" jdbcType="INTEGER" />
    <result column="material" property="material" jdbcType="VARCHAR" />
    <result column="tag_num" property="tagNum" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="typeName" property="typeName" jdbcType="VARCHAR" />
  </resultMap>
  <select id="showGoods"  resultMap="showGood">
    select a.* ,b.text as typeName  from c_goods a,c_goods_types b where a.type_id=b.id and a.state=0
  </select>
  <select id="showGoodsName"  resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select title,id  from c_goods  where type_id=#{typeId,jdbcType=INTEGER}
  </select>
  <update id="updateSaleNumByMonth">
    update c_goods
    set
      amount = 0
  </update>
</mapper>