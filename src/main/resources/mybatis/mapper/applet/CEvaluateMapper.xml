<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hans.shilipiaoxiang.applet.mapper.CEvaluateMapper" >
  <resultMap id="BaseResultMap" type="com.hans.shilipiaoxiang.applet.pojo.CEvaluate" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="rate" property="rate" jdbcType="INTEGER" />
    <result column="text" property="text" jdbcType="VARCHAR" />
    <result column="evaluated_time" property="evaluatedTime" jdbcType="BIGINT" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="userName" property="userName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, order_id, user_id, rate, text, evaluated_time, state
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hans.shilipiaoxiang.applet.pojo.CEvaluateExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from c_evaluate
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from c_evaluate
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from c_evaluate
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hans.shilipiaoxiang.applet.pojo.CEvaluateExample" >
    delete from c_evaluate
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hans.shilipiaoxiang.applet.pojo.CEvaluate" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into c_evaluate (order_id, user_id, rate, 
      text, evaluated_time, state
      )
    values (#{orderId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{rate,jdbcType=INTEGER}, 
      #{text,jdbcType=VARCHAR}, #{evaluatedTime,jdbcType=BIGINT}, #{state,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hans.shilipiaoxiang.applet.pojo.CEvaluate" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into c_evaluate
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="rate != null" >
        rate,
      </if>
      <if test="text != null" >
        text,
      </if>
      <if test="evaluatedTime != null" >
        evaluated_time,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="rate != null" >
        #{rate,jdbcType=INTEGER},
      </if>
      <if test="text != null" >
        #{text,jdbcType=VARCHAR},
      </if>
      <if test="evaluatedTime != null" >
        #{evaluatedTime,jdbcType=BIGINT},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hans.shilipiaoxiang.applet.pojo.CEvaluateExample" resultType="java.lang.Integer" >
    select count(*) from c_evaluate
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update c_evaluate
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.rate != null" >
        rate = #{record.rate,jdbcType=INTEGER},
      </if>
      <if test="record.text != null" >
        text = #{record.text,jdbcType=VARCHAR},
      </if>
      <if test="record.evaluatedTime != null" >
        evaluated_time = #{record.evaluatedTime,jdbcType=BIGINT},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update c_evaluate
    set id = #{record.id,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      rate = #{record.rate,jdbcType=INTEGER},
      text = #{record.text,jdbcType=VARCHAR},
      evaluated_time = #{record.evaluatedTime,jdbcType=BIGINT},
      state = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hans.shilipiaoxiang.applet.pojo.CEvaluate" >
    update c_evaluate
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="rate != null" >
        rate = #{rate,jdbcType=INTEGER},
      </if>
      <if test="text != null" >
        text = #{text,jdbcType=VARCHAR},
      </if>
      <if test="evaluatedTime != null" >
        evaluated_time = #{evaluatedTime,jdbcType=BIGINT},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hans.shilipiaoxiang.applet.pojo.CEvaluate" >
    update c_evaluate
    set order_id = #{orderId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      rate = #{rate,jdbcType=INTEGER},
      text = #{text,jdbcType=VARCHAR},
      evaluated_time = #{evaluatedTime,jdbcType=BIGINT},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="showEvaluate" type="com.hans.shilipiaoxiang.applet.pojo.CEvaluate" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="rate" property="rate" jdbcType="INTEGER" />
    <result column="text" property="text" jdbcType="VARCHAR" />
    <result column="evaluated_time" property="evaluatedTime" jdbcType="BIGINT" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="userName" property="userName" jdbcType="VARCHAR" />
    <collection property="cEvaluateReplyList" ofType="com.hans.shilipiaoxiang.applet.pojo.CEvaluateReply">
      <id column="aid" property="id" jdbcType="INTEGER" />
      <result column="order_id" property="orderId" jdbcType="INTEGER" />
      <result column="user_id" property="userId" jdbcType="INTEGER" />
      <result column="admin_id" property="adminId" jdbcType="INTEGER" />
      <result column="text" property="text" jdbcType="VARCHAR" />
      <result column="reply_time" property="replyTime" jdbcType="BIGINT" />
      <result column="type" property="type" jdbcType="INTEGER" />
      <result column="evaluate_id" jdbcType="INTEGER" property="evaluateId" />
    </collection>
  </resultMap>
  <select id="showEvaluate" parameterType="java.lang.Integer" resultMap="BaseResultMap" >
    select a.*,b.name as userName from c_evaluate a,c_user b where a.user_id = #{userId,jdbcType=INTEGER} and a.state=1 and b.id=#{userId,jdbcType=INTEGER}
  </select>
  <select id="showAllEvaluate" resultMap="BaseResultMap" >
    select a.*,b.name as userName from c_evaluate a,c_user b where a.user_id = b.id
  </select>
</mapper>